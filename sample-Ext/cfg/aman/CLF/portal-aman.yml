portal-aman:
  StackName: cpa
  CloudFrontCacheBehaviors:
    - 0:
        AllowedMethods: ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT']
        DefaultTTL: 0
        ForwardedValues:
          Cookies:
            Forward: all
          Headers: ['Host']
        TargetOriginId: client-portal
        ViewerProtocolPolicy: allow-all
    - /api/*:
        PathPattern: '/api/*'
        AllowedMethods: ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT']
        DefaultTTL: 0
        ForwardedValues:
          Cookies:
            Forward: all
        TargetOriginId: api-portal
        ViewerProtocolPolicy: allow-all
    - /robots.txt:
        PathPattern: '/robots.txt'
        DefaultTTL: 86400
        ForwardedValues:
          QueryString: False
        TargetOriginId: portal-static
  CloudFrontComment: Sub('portal.aman.arda (${EnvShort})')
  CloudFrontOrigins:
    - ClientPortal:
        DomainName: Sub(f'client-portal.origin.{cfg.HostedZoneNameEnv}')
        OriginCustomHeaders:
          - XSECRET:
              HeaderName: X-SECRET-CFKEY
              HeaderValue: my-secret-key
        Id: client-portal
    - ApiPortal:
        DomainName: Sub(f'api-portal.origin.{cfg.HostedZoneNameEnv}')
        OriginCustomHeaders:
          - XSECRET:
              HeaderName: X-SECRET-CFKEY
              HeaderValue: my-secret-key2
        Id: api-portal
    - PortalStatic:
        DomainName: Sub('${AWS::Region}-arda-aman-${EnvShort}-portal-static.s3.amazonaws.com')
        Id: portal-static

dev:
  CloudFrontAliasExtra:
    - 1: portal.dev.aman.arda

stg:
  CloudFrontAliasExtra:
    - 1: portal.stg.aman.arda

prd:
  CloudFrontAliasExtra:
    - 1: portal.aman.arda
    - 2: valar-portal.aman.arda
  CloudFrontWebACLId: None

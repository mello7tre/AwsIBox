AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  BaseRegion:
    Fn::Equals:
      - eu-west-1
      - Ref: AWS::Region
  Deploymentv1A:
    Fn::Equals:
      - Ref: Deploymentv1
      - A
  Deploymentv1B:
    Fn::Equals:
      - Ref: Deploymentv1
      - B
  Deploymentv1DescriptionOverride:
    Fn::Not:
      - Fn::Equals:
          - Ref: Deploymentv1Description
          - ''
  Deploymentv1Override:
    Fn::Not:
      - Fn::Equals:
          - Ref: Deploymentv1
          - ''
  LambdaInfraInfov1CodeS3KeyOverride:
    Fn::Not:
      - Fn::Equals:
          - Ref: LambdaInfraInfov1CodeS3Key
          - ''
  ListenerLoadBalancerHttpPort:
    Fn::Equals:
      - 'True'
      - 'False'
  ListenerLoadBalancerHttpsPort:
    Fn::Equals:
      - 'True'
      - 'True'
  RecordSetCloudFront:
    Fn::And:
      - Condition: CloudFrontDistribution
      - Fn::Equals:
          - 'True'
          - 'True'
Description: infra-info (Generated by awsibox 0.2.20) [agw]
Outputs:
  BrandDomain:
    Value: aman.arda
  Deploymentv1:
    Value:
      Ref: Deploymentv1
  Env:
    Value:
      Ref: Env
  EnvRole:
    Value:
      Ref: EnvRole
  EnvStackVersion:
    Value:
      Ref: EnvStackVersion
  InvokeUrl:
    Value:
      Fn::Sub: https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/v1
  LambdaInfraInfov1CodeS3Key:
    Value:
      Fn::If:
        - LambdaInfraInfov1CodeS3KeyOverride
        - Ref: LambdaInfraInfov1CodeS3Key
        - ibox-tools/infra-info/infra-info-01.zip
  StackType:
    Value: agw
Parameters:
  Deploymentv1:
    AllowedValues:
      - A
      - B
    Default: A
    Description: Deploymentv1 - change between A/B to trigger new deploy
    Type: String
  Deploymentv1Description:
    Default: v1
    Description: Deploymentv1 Description
    Type: String
  Env:
    AllowedValues:
      - dev
      - stg
      - prod
    Default: dev
    Description: Environment
    Type: String
  EnvRole:
    AllowedPattern: ^[a-zA-Z0-9-_.]*$
    Default: ''
    Description: Service Role
    Type: String
  EnvShort:
    AllowedValues:
      - dev
      - stg
      - prd
    Default: dev
    Description: Environment Short - NEVER CHANGE!
    Type: String
  EnvStackVersion:
    Default: '1'
    Description: Stack version, if changed with UpdateMode=Cfn triggers cfn-hup
    Type: String
  LambdaInfraInfov1CodeS3Key:
    Default: ''
    Description: S3Key Name for lambda InfraInfov1 Code
    Type: String
Resources:
  ApiGatewayDeploymentv1A:
    Condition: Deploymentv1A
    DependsOn: ApiGatewayResource01RootMethod01ANY
    Properties:
      Description:
        Ref: Deploymentv1Description
      RestApiId:
        Ref: ApiGatewayRestApi
    Type: AWS::ApiGateway::Deployment
  ApiGatewayDeploymentv1B:
    Condition: Deploymentv1B
    DependsOn: ApiGatewayResource01RootMethod01ANY
    Properties:
      Description:
        Ref: Deploymentv1Description
      RestApiId:
        Ref: ApiGatewayRestApi
    Type: AWS::ApiGateway::Deployment
  ApiGatewayResource01Root:
    Properties:
      ParentId:
        Fn::GetAtt:
          - ApiGatewayRestApi
          - RootResourceId
      PathPart: '{proxy+}'
      RestApiId:
        Ref: ApiGatewayRestApi
    Type: AWS::ApiGateway::Resource
  ApiGatewayResource01RootMethod01ANY:
    Properties:
      ApiKeyRequired: false
      AuthorizationType: None
      HttpMethod: ANY
      Integration:
        ContentHandling: CONVERT_TO_TEXT
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseTemplates:
              text/html: '{}'
            StatusCode: '200'
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaInfraInfov1.Arn}/invocations
      RequestParameters:
        method.request.path.proxy: true
      ResourceId:
        Ref: ApiGatewayResource01Root
      RestApiId:
        Ref: ApiGatewayRestApi
    Type: AWS::ApiGateway::Method
  ApiGatewayRestApi:
    Properties:
      ApiKeySourceType: HEADER
      BinaryMediaTypes:
        - '*/*'
      Description: Infrastracture Informations
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: InfraInfo
      Policy:
        Statement:
          - Action: execute-api:Invoke
            Effect: Allow
            Principal: '*'
            Resource: execute-api:/*
        Version: '2012-10-17'
    Type: AWS::ApiGateway::RestApi
  ApiGatewayStagev1:
    Properties:
      CacheClusterEnabled: false
      DeploymentId:
        Fn::If:
          - Deploymentv1A
          - Ref: ApiGatewayDeploymentv1A
          - Ref: ApiGatewayDeploymentv1B
      MethodSettings:
        - CachingEnabled: false
          DataTraceEnabled: false
          HttpMethod: '*'
          MetricsEnabled: true
          ResourcePath: /*
          ThrottlingBurstLimit: 5000
          ThrottlingRateLimit: 10000
      RestApiId:
        Ref: ApiGatewayRestApi
      StageName: v1
      TracingEnabled: false
    Type: AWS::ApiGateway::Stage
  IAMPolicyLambdaInfraInfo:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudformation:DescribeStack*
              - ecs:ListClusters
              - ecs:ListServices
              - ecs:DescribeServices
              - application-autoscaling:DescribeScalableTargets
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: LambdaInfraInfo
      Roles:
        - Ref: RoleLambdaInfraInfov1
    Type: AWS::IAM::Policy
  LambdaInfraInfov1:
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: ${AWS::Region}-arda-aman-app-repository
        S3Key:
          Fn::If:
            - LambdaInfraInfov1CodeS3KeyOverride
            - Ref: LambdaInfraInfov1CodeS3Key
            - ibox-tools/infra-info/infra-info-01.zip
      Description: Infrastracture Informations
      Environment:
        Variables:
          Env:
            Ref: EnvShort
          EnvRole:
            Ref: EnvRole
      FunctionName:
        Fn::Sub: ${AWS::StackName}-${EnvRole}-InfraInfov1
      Handler: index.lambda_handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
          - RoleLambdaInfraInfov1
          - Arn
      Runtime: python3.7
      Timeout: 60
    Type: AWS::Lambda::Function
  LambdaPermissionInfraInfov1:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: LambdaInfraInfov1
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/*/*
    Type: AWS::Lambda::Permission
  RoleLambdaInfraInfov1:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - Ref: AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Path: /
    Type: AWS::IAM::Role


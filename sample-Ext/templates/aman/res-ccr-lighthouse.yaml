AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  BaseRegion:
    Fn::Equals:
      - eu-west-1
      - Ref: AWS::Region
  LambdaCCRLightHouseCodeS3KeyOverride:
    Fn::Not:
      - Fn::Equals:
          - Ref: LambdaCCRLightHouseCodeS3Key
          - ''
  LightHouseTaskStackNameOverride:
    Fn::Not:
      - Fn::Equals:
          - Ref: LightHouseTaskStackName
          - ''
Description: res-ccr-lighthouse (Generated by awsibox 0.2.20) [res]
Outputs:
  BrandDomain:
    Value: aman.arda
  Env:
    Value:
      Ref: Env
  EnvApp1Version:
    Value:
      Ref: EnvApp1Version
  EnvRole:
    Value:
      Ref: EnvRole
  EnvStackVersion:
    Value:
      Ref: EnvStackVersion
  LambdaCCRLightHouse:
    Export:
      Name: LambdaCCRLightHouse
    Value:
      Fn::GetAtt:
        - LambdaCCRLightHouse
        - Arn
  LambdaCCRLightHouseCodeS3Key:
    Value:
      Fn::If:
        - LambdaCCRLightHouseCodeS3KeyOverride
        - Ref: LambdaCCRLightHouseCodeS3Key
        - Fn::Sub: ibox-tools/ccr-lighthouse/ccr-lighthouse-${EnvApp1Version}.zip
  StackType:
    Value: res
Parameters:
  Env:
    AllowedValues:
      - dev
      - stg
      - prod
    Default: dev
    Description: Environment
    Type: String
  EnvApp1Version:
    Default: ''
    Description: EnvApp1Version used by Lambda
    Type: String
  EnvRole:
    AllowedPattern: ^[a-zA-Z0-9-_.]*$
    Default: ''
    Description: Service Role
    Type: String
  EnvShort:
    AllowedValues:
      - dev
      - stg
      - prd
    Default: dev
    Description: Environment Short - NEVER CHANGE!
    Type: String
  EnvStackVersion:
    Default: '1'
    Description: Stack version, if changed with UpdateMode=Cfn triggers cfn-hup
    Type: String
  LambdaCCRLightHouseCodeS3Key:
    Default: ''
    Description: S3Key Name for lambda CCRLightHouse Code
    Type: String
  LightHouseTaskStackName:
    Default: ''
    Description: LightHouseTask StackName
    Type: String
Resources:
  IAMPolicyLambdaCCRLightHouse:
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecs:RunTask
              - ecs:StartTask
            Effect: Allow
            Resource:
              Fn::Sub: arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task-definition/lth-t-*
          - Action:
              - iam:PassRole
            Effect: Allow
            Resource:
              - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/lth-t-*
              - Fn::ImportValue: RoleECSTaskExecution
          - Action:
              - events:ListTargetsByRule
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: LambdaCCRLightHouse
      Roles:
        - Ref: RoleLambdaCCRLightHouse
    Type: AWS::IAM::Policy
  LambdaCCRLightHouse:
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: ${AWS::Region}-arda-aman-app-repository
        S3Key:
          Fn::If:
            - LambdaCCRLightHouseCodeS3KeyOverride
            - Ref: LambdaCCRLightHouseCodeS3Key
            - Fn::Sub: ibox-tools/ccr-lighthouse/ccr-lighthouse-${EnvApp1Version}.zip
      Description: Custom Resource for executing lighthouse-task
      Environment:
        Variables:
          Env:
            Ref: EnvShort
          EnvRole:
            Ref: EnvRole
          LightHouseTaskStackName:
            Ref: LightHouseTaskStackName
      FunctionName:
        Fn::Sub: ${AWS::StackName}-${EnvRole}-CCRLightHouse
      Handler: index.lambda_handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
          - RoleLambdaCCRLightHouse
          - Arn
      Runtime: python3.7
      Timeout: 300
    Type: AWS::Lambda::Function
  RoleLambdaCCRLightHouse:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - Ref: AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Path: /
    Type: AWS::IAM::Role


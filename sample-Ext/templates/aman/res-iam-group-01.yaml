AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  BaseRegion:
    Fn::Equals:
      - eu-west-1
      - Ref: AWS::Region
  IAMGroupBackEndDeveloper:
    Fn::Not:
      - Fn::Equals:
          - true
          - None
  IAMGroupBase:
    Fn::Not:
      - Fn::Equals:
          - true
          - None
  IAMGroupCloudWatchRead:
    Fn::Not:
      - Fn::Equals:
          - true
          - None
  IAMGroupCloudWatchReadJoker01:
    Fn::Not:
      - Fn::Equals:
          - true
          - None
  IAMGroupDeveloper:
    Fn::Not:
      - Fn::Equals:
          - true
          - None
  IAMGroupPower:
    Fn::Not:
      - Fn::Equals:
          - true
          - None
Description: res-iam-group-01 (Generated by awsibox 0.2.20) [res]
Outputs:
  BrandDomain:
    Value: aman.arda
  Env:
    Value:
      Ref: Env
  EnvRole:
    Value:
      Ref: EnvRole
  EnvStackVersion:
    Value:
      Ref: EnvStackVersion
  StackType:
    Value: res
Parameters:
  Env:
    AllowedValues:
      - dev
      - stg
      - prod
    Default: dev
    Description: Environment
    Type: String
  EnvRole:
    AllowedPattern: ^[a-zA-Z0-9-_.]*$
    Default: ''
    Description: Service Role
    Type: String
  EnvShort:
    AllowedValues:
      - dev
      - stg
      - prd
    Default: dev
    Description: Environment Short - NEVER CHANGE!
    Type: String
  EnvStackVersion:
    Default: '1'
    Description: Stack version, if changed with UpdateMode=Cfn triggers cfn-hup
    Type: String
Resources:
  IAMGroupBackEndDeveloper:
    Condition: IAMGroupBackEndDeveloper
    Properties:
      GroupName: BackEndDeveloper
      ManagedPolicyArns:
        - Fn::ImportValue: IAMPolicyBackEndDeveloper
    Type: AWS::IAM::Group
  IAMGroupBase:
    Condition: IAMGroupBase
    Properties:
      GroupName: Base
      ManagedPolicyArns:
        - Fn::ImportValue: IAMPolicyIAMUserManageOwn
        - Fn::ImportValue: IAMPolicyS3ListBuckets
        - Fn::ImportValue: IAMPolicyLogGroupsDescribe
    Type: AWS::IAM::Group
  IAMGroupCloudWatchRead:
    Condition: IAMGroupCloudWatchRead
    Properties:
      GroupName: CloudWatchRead
      ManagedPolicyArns:
        - Fn::ImportValue: IAMPolicyLogRead
        - Fn::ImportValue: IAMPolicyMetricRead
    Type: AWS::IAM::Group
  IAMGroupCloudWatchReadJoker01:
    Condition: IAMGroupCloudWatchReadJoker01
    Properties:
      GroupName: CloudWatchReadJoker01
      ManagedPolicyArns:
        - Fn::ImportValue: IAMPolicyLogReadJoker01
    Type: AWS::IAM::Group
  IAMGroupDeveloper:
    Condition: IAMGroupDeveloper
    Properties:
      GroupName: Developer
      ManagedPolicyArns:
        - Fn::ImportValue: IAMPolicySSMParameterStoreBase
        - Fn::ImportValue: IAMPolicyLogRead
        - Fn::ImportValue: IAMPolicyECRRead
        - Fn::ImportValue: IAMPolicyMetricRead
    Type: AWS::IAM::Group
  IAMGroupPower:
    Condition: IAMGroupPower
    Properties:
      GroupName: Power
      ManagedPolicyArns:
        - Fn::ImportValue: IAMPolicyIAMUserManageOwn
        - Fn::ImportValue: IAMPolicyPowerUserAccessNoSSM
        - Fn::ImportValue: IAMPolicySSMParameterStoreBase
    Type: AWS::IAM::Group


AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  BaseRegion:
    Fn::Equals:
      - eu-west-1
      - Ref: AWS::Region
  EFSFileSystemEcsCluster:
    Fn::Not:
      - Fn::Equals:
          - None
          - None
  EFSMountTargetEcsCluster0:
    Fn::And:
      - Condition: EFSFileSystemEcsCluster
      - Fn::Equals:
          - Fn::FindInMap:
              - AvabilityZones
              - Ref: AWS::Region
              - Zone0
          - 'True'
  EFSMountTargetEcsCluster1:
    Fn::And:
      - Condition: EFSFileSystemEcsCluster
      - Fn::Equals:
          - Fn::FindInMap:
              - AvabilityZones
              - Ref: AWS::Region
              - Zone1
          - 'True'
  EFSMountTargetEcsCluster2:
    Fn::And:
      - Condition: EFSFileSystemEcsCluster
      - Fn::Equals:
          - Fn::FindInMap:
              - AvabilityZones
              - Ref: AWS::Region
              - Zone2
          - 'True'
  EFSMountTargetEcsCluster3:
    Fn::And:
      - Condition: EFSFileSystemEcsCluster
      - Fn::Equals:
          - Fn::FindInMap:
              - AvabilityZones
              - Ref: AWS::Region
              - Zone3
          - 'True'
  EFSMountTargetEcsCluster4:
    Fn::And:
      - Condition: EFSFileSystemEcsCluster
      - Fn::Equals:
          - Fn::FindInMap:
              - AvabilityZones
              - Ref: AWS::Region
              - Zone4
          - 'True'
  EFSMountTargetEcsCluster5:
    Fn::And:
      - Condition: EFSFileSystemEcsCluster
      - Fn::Equals:
          - Fn::FindInMap:
              - AvabilityZones
              - Ref: AWS::Region
              - Zone5
          - 'True'
  RegionAWSCloudFormationStackSetRoles:
    Fn::Equals:
      - Ref: RegionAWSCloudFormationStackSetRoles
      - Ref: AWS::Region
  RegionAWSCloudFormationStackSetRolesOverride:
    Fn::Not:
      - Fn::Equals:
          - Ref: RegionAWSCloudFormationStackSetRoles
          - ''
Description: res-extra-01 (Generated by awsibox 0.2.20) [res]
Mappings:
  AvabilityZones:
    eu-central-1:
      Zone0: 'True'
      Zone1: 'True'
      Zone2: 'True'
      Zone3: 'False'
      Zone4: 'False'
      Zone5: 'False'
    eu-west-1:
      Zone0: 'True'
      Zone1: 'True'
      Zone2: 'True'
      Zone3: 'False'
      Zone4: 'False'
      Zone5: 'False'
    us-east-1:
      Zone0: 'True'
      Zone1: 'True'
      Zone2: 'True'
      Zone3: 'True'
      Zone4: 'True'
      Zone5: 'True'
Outputs:
  BrandDomain:
    Value: aman.arda
  CacheSubnetGroupPrivate:
    Export:
      Name: CacheSubnetGroupPrivate
    Value:
      Ref: CacheSubnetGroupPrivate
  CacheSubnetGroupPublic:
    Export:
      Name: CacheSubnetGroupPublic
    Value:
      Ref: CacheSubnetGroupPublic
  CloudFrontCachePolicy0AllHeadersNone:
    Export:
      Name: CloudFrontCachePolicy0AllHeadersNone
    Value:
      Ref: CloudFrontCachePolicy0AllHeadersNone
  CloudFrontCachePolicy31536000HeaderOrigin:
    Export:
      Name: CloudFrontCachePolicy31536000HeaderOrigin
    Value:
      Ref: CloudFrontCachePolicy31536000HeaderOrigin
  CloudFrontCachePolicy31536000None:
    Export:
      Name: CloudFrontCachePolicy31536000None
    Value:
      Ref: CloudFrontCachePolicy31536000None
  CloudFrontCachePolicy86400None:
    Export:
      Name: CloudFrontCachePolicy86400None
    Value:
      Ref: CloudFrontCachePolicy86400None
  CloudFrontCachePolicy86400QueryStrings:
    Export:
      Name: CloudFrontCachePolicy86400QueryStrings
    Value:
      Ref: CloudFrontCachePolicy86400QueryStrings
  CloudFrontCachePolicy86400QueryStringsHeadersCustom:
    Export:
      Name: CloudFrontCachePolicy86400QueryStringsHeadersCustom
    Value:
      Ref: CloudFrontCachePolicy86400QueryStringsHeadersCustom
  CloudFrontOriginRequestPolicyAll:
    Export:
      Name: CloudFrontOriginRequestPolicyAll
    Value:
      Ref: CloudFrontOriginRequestPolicyAll
  CloudFrontOriginRequestPolicyAllCookiesQueryStringsHeadersCustom:
    Export:
      Name: CloudFrontOriginRequestPolicyAllCookiesQueryStringsHeadersCustom
    Value:
      Ref: CloudFrontOriginRequestPolicyAllCookiesQueryStringsHeadersCustom
  CloudFrontOriginRequestPolicyAllQueryStringsHeadersCustom:
    Export:
      Name: CloudFrontOriginRequestPolicyAllQueryStringsHeadersCustom
    Value:
      Ref: CloudFrontOriginRequestPolicyAllQueryStringsHeadersCustom
  CloudFrontOriginRequestPolicyHeadersCustom:
    Export:
      Name: CloudFrontOriginRequestPolicyHeadersCustom
    Value:
      Ref: CloudFrontOriginRequestPolicyHeadersCustom
  DBSubnetGroupPrivate:
    Export:
      Name: DBSubnetGroupPrivate
    Value:
      Ref: DBSubnetGroupPrivate
  DBSubnetGroupPublic:
    Export:
      Name: DBSubnetGroupPublic
    Value:
      Ref: DBSubnetGroupPublic
  EFSFileSystemEcsCluster:
    Export:
      Name: EFSFileSystemEcsCluster
    Value:
      Ref: EFSFileSystemEcsCluster
  Env:
    Value:
      Ref: Env
  EnvRole:
    Value:
      Ref: EnvRole
  EnvStackVersion:
    Value:
      Ref: EnvStackVersion
  SNSTopicCloudFormationNotification:
    Export:
      Name: SNSTopicCloudFormationNotification
    Value:
      Ref: SNSTopicCloudFormationNotification
  SecurityGroupEFSEcsCluster:
    Condition: EFSFileSystemEcsCluster
    Export:
      Name: SecurityGroupEFSEcsCluster
    Value:
      Fn::GetAtt:
        - SecurityGroupEFSEcsCluster
        - GroupId
  SecurityGroupElasticSearch:
    Export:
      Name: SecurityGroupElasticSearch
    Value:
      Fn::GetAtt:
        - SecurityGroupElasticSearch
        - GroupId
  SecurityGroupRDS:
    Export:
      Name: SecurityGroupRDS
    Value:
      Fn::GetAtt:
        - SecurityGroupRDS
        - GroupId
  StackType:
    Value: res
Parameters:
  Env:
    AllowedValues:
      - dev
      - stg
      - prod
    Default: dev
    Description: Environment
    Type: String
  EnvRole:
    AllowedPattern: ^[a-zA-Z0-9-_.]*$
    Default: ''
    Description: Service Role
    Type: String
  EnvShort:
    AllowedValues:
      - dev
      - stg
      - prd
    Default: dev
    Description: Environment Short - NEVER CHANGE!
    Type: String
  EnvStackVersion:
    Default: '1'
    Description: Stack version, if changed with UpdateMode=Cfn triggers cfn-hup
    Type: String
  RegionAWSCloudFormationStackSetRoles:
    AllowedValues:
      - eu-west-1
      - us-east-1
      - eu-central-1
    Default: eu-west-1
    Description: Region where create AWSCloudFormationStackSet Roles
    Type: String
Resources:
  ApiGatewayAccount:
    Properties:
      CloudWatchRoleArn:
        Fn::ImportValue: RoleApiGatewayCloudWatch
    Type: AWS::ApiGateway::Account
  CacheSubnetGroupPrivate:
    Properties:
      Description:
        Fn::Sub: ${EnvShort}-Private
      SubnetIds:
        Fn::Split:
          - ','
          - Fn::ImportValue: SubnetsPrivate
    Type: AWS::ElastiCache::SubnetGroup
  CacheSubnetGroupPublic:
    Properties:
      Description:
        Fn::Sub: ${EnvShort}-Public
      SubnetIds:
        Fn::Split:
          - ','
          - Fn::ImportValue: SubnetsPublic
    Type: AWS::ElastiCache::SubnetGroup
  CloudFrontCachePolicy0AllHeadersNone:
    Properties:
      CachePolicyConfig:
        Comment: Default TTL 0 All Cookies and QueryStrings No Headers
        DefaultTTL: 0
        MaxTTL: 1
        MinTTL: 0
        Name: 0AllHeadersNone
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: all
          EnableAcceptEncodingBrotli: 'true'
          EnableAcceptEncodingGzip: 'true'
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all
    Type: AWS::CloudFront::CachePolicy
  CloudFrontCachePolicy31536000HeaderOrigin:
    Properties:
      CachePolicyConfig:
        Comment: Default TTL 31536000 Header Origin
        DefaultTTL: 31536000
        MaxTTL: 31536000
        MinTTL: 0
        Name: 31536000HeaderOrigin
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: 'true'
          EnableAcceptEncodingGzip: 'true'
          HeadersConfig:
            HeaderBehavior: whitelist
            Headers:
              - Origin
          QueryStringsConfig:
            QueryStringBehavior: none
    Type: AWS::CloudFront::CachePolicy
  CloudFrontCachePolicy31536000None:
    Properties:
      CachePolicyConfig:
        Comment: Default TTL 31536000 None
        DefaultTTL: 31536000
        MaxTTL: 31536000
        MinTTL: 0
        Name: 31536000None
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: 'true'
          EnableAcceptEncodingGzip: 'true'
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
    Type: AWS::CloudFront::CachePolicy
  CloudFrontCachePolicy86400None:
    Properties:
      CachePolicyConfig:
        Comment: Default TTL 86400 None
        DefaultTTL: 86400
        MaxTTL: 31536000
        MinTTL: 0
        Name: 86400None
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: 'true'
          EnableAcceptEncodingGzip: 'true'
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
    Type: AWS::CloudFront::CachePolicy
  CloudFrontCachePolicy86400QueryStrings:
    Properties:
      CachePolicyConfig:
        Comment: Default TTL 86400 QueryStrings
        DefaultTTL: 86400
        MaxTTL: 31536000
        MinTTL: 0
        Name: 86400QueryStrings
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: 'true'
          EnableAcceptEncodingGzip: 'true'
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all
    Type: AWS::CloudFront::CachePolicy
  CloudFrontCachePolicy86400QueryStringsHeadersCustom:
    Properties:
      CachePolicyConfig:
        Comment: Default TTL 86400 QueryStrings and Custom Headers
        DefaultTTL: 86400
        MaxTTL: 31536000
        MinTTL: 0
        Name: 86400QueryStringsHeadersCustom
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: 'true'
          EnableAcceptEncodingGzip: 'true'
          HeadersConfig:
            HeaderBehavior: whitelist
            Headers:
              - Origin
              - Authorization
          QueryStringsConfig:
            QueryStringBehavior: all
    Type: AWS::CloudFront::CachePolicy
  CloudFrontOriginRequestPolicyAll:
    Properties:
      OriginRequestPolicyConfig:
        Comment: Forward All
        CookiesConfig:
          CookieBehavior: all
        HeadersConfig:
          HeaderBehavior: allViewer
        Name: All
        QueryStringsConfig:
          QueryStringBehavior: all
    Type: AWS::CloudFront::OriginRequestPolicy
  CloudFrontOriginRequestPolicyAllCookiesQueryStringsHeadersCustom:
    Properties:
      OriginRequestPolicyConfig:
        Comment: Forward All Cookies, QueryStrings and Custom Headers
        CookiesConfig:
          CookieBehavior: all
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            - User-Agent
            - Referer
            - CloudFront-Is-Mobile-Viewer
            - CloudFront-Viewer-City
        Name: AllCookiesQueryStringsHeadersCustom
        QueryStringsConfig:
          QueryStringBehavior: all
    Type: AWS::CloudFront::OriginRequestPolicy
  CloudFrontOriginRequestPolicyAllQueryStringsHeadersCustom:
    Properties:
      OriginRequestPolicyConfig:
        Comment: Forward All QueryStrings and Custom Headers
        CookiesConfig:
          CookieBehavior: none
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            - User-Agent
            - Referer
            - CloudFront-Is-Mobile-Viewer
            - CloudFront-Viewer-City
        Name: AllQueryStringsHeadersCustom
        QueryStringsConfig:
          QueryStringBehavior: all
    Type: AWS::CloudFront::OriginRequestPolicy
  CloudFrontOriginRequestPolicyHeadersCustom:
    Properties:
      OriginRequestPolicyConfig:
        Comment: Forward Custom Headers
        CookiesConfig:
          CookieBehavior: none
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            - User-Agent
            - Referer
            - CloudFront-Is-Mobile-Viewer
            - CloudFront-Viewer-City
        Name: HeadersCustom
        QueryStringsConfig:
          QueryStringBehavior: none
    Type: AWS::CloudFront::OriginRequestPolicy
  DBSubnetGroupPrivate:
    Properties:
      DBSubnetGroupDescription:
        Fn::Sub: ${EnvShort}-Private
      SubnetIds:
        Fn::Split:
          - ','
          - Fn::ImportValue: SubnetsPrivate
    Type: AWS::RDS::DBSubnetGroup
  DBSubnetGroupPublic:
    Properties:
      DBSubnetGroupDescription:
        Fn::Sub: ${EnvShort}-Public
      SubnetIds:
        Fn::Split:
          - ','
          - Fn::ImportValue: SubnetsPublic
    Type: AWS::RDS::DBSubnetGroup
  EFSFileSystemEcsCluster:
    Condition: EFSFileSystemEcsCluster
    Properties:
      Encrypted: 'false'
      PerformanceMode: generalPurpose
    Type: AWS::EFS::FileSystem
  EFSMountTargetEcsCluster0:
    Condition: EFSMountTargetEcsCluster0
    Properties:
      FileSystemId:
        Ref: EFSFileSystemEcsCluster
      SecurityGroups:
        - Ref: SecurityGroupEFSServerEcsCluster
      SubnetId:
        Fn::Select:
          - '0'
          - Fn::Split:
              - ','
              - Fn::ImportValue: SubnetsPrivate
    Type: AWS::EFS::MountTarget
  EFSMountTargetEcsCluster1:
    Condition: EFSMountTargetEcsCluster1
    Properties:
      FileSystemId:
        Ref: EFSFileSystemEcsCluster
      SecurityGroups:
        - Ref: SecurityGroupEFSServerEcsCluster
      SubnetId:
        Fn::Select:
          - '1'
          - Fn::Split:
              - ','
              - Fn::ImportValue: SubnetsPrivate
    Type: AWS::EFS::MountTarget
  EFSMountTargetEcsCluster2:
    Condition: EFSMountTargetEcsCluster2
    Properties:
      FileSystemId:
        Ref: EFSFileSystemEcsCluster
      SecurityGroups:
        - Ref: SecurityGroupEFSServerEcsCluster
      SubnetId:
        Fn::Select:
          - '2'
          - Fn::Split:
              - ','
              - Fn::ImportValue: SubnetsPrivate
    Type: AWS::EFS::MountTarget
  EFSMountTargetEcsCluster3:
    Condition: EFSMountTargetEcsCluster3
    Properties:
      FileSystemId:
        Ref: EFSFileSystemEcsCluster
      SecurityGroups:
        - Ref: SecurityGroupEFSServerEcsCluster
      SubnetId:
        Fn::Select:
          - '3'
          - Fn::Split:
              - ','
              - Fn::ImportValue: SubnetsPrivate
    Type: AWS::EFS::MountTarget
  EFSMountTargetEcsCluster4:
    Condition: EFSMountTargetEcsCluster4
    Properties:
      FileSystemId:
        Ref: EFSFileSystemEcsCluster
      SecurityGroups:
        - Ref: SecurityGroupEFSServerEcsCluster
      SubnetId:
        Fn::Select:
          - '4'
          - Fn::Split:
              - ','
              - Fn::ImportValue: SubnetsPrivate
    Type: AWS::EFS::MountTarget
  EFSMountTargetEcsCluster5:
    Condition: EFSMountTargetEcsCluster5
    Properties:
      FileSystemId:
        Ref: EFSFileSystemEcsCluster
      SecurityGroups:
        - Ref: SecurityGroupEFSServerEcsCluster
      SubnetId:
        Fn::Select:
          - '5'
          - Fn::Split:
              - ','
              - Fn::ImportValue: SubnetsPrivate
    Type: AWS::EFS::MountTarget
  IAMPolicyAssumeRoleAWSCloudFormationStackSetExecutionRole:
    Properties:
      Description: Assume Role AWSCloudFormationStackSetExecutionRole
      PolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Resource: arn:aws:iam::*:role/AWSCloudFormationStackSetExecutionRole
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  RoleAWSCloudFormationStackSetAdministrationRole:
    Condition: RegionAWSCloudFormationStackSetRoles
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
      ManagedPolicyArns:
        - Ref: IAMPolicyAssumeRoleAWSCloudFormationStackSetExecutionRole
      Path: /
      RoleName: AWSCloudFormationStackSetAdministrationRole
    Type: AWS::IAM::Role
  RoleAWSCloudFormationStackSetExecutionRole:
    Condition: RegionAWSCloudFormationStackSetRoles
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                - Fn::GetAtt:
                    - RoleAWSCloudFormationStackSetAdministrationRole
                    - Arn
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Path: /
      RoleName: AWSCloudFormationStackSetExecutionRole
    Type: AWS::IAM::Role
  SNSTopicCloudFormationNotification:
    Properties:
      DisplayName:
        Fn::Sub: ${AWS::StackName}.${EnvRole}-SNSCloudFormationNotification
    Type: AWS::SNS::Topic
  SecurityGroupEFSEcsCluster:
    Condition: EFSFileSystemEcsCluster
    Properties:
      GroupDescription: Enable access to EFS FileSystem EcsCluster
      VpcId:
        Fn::ImportValue: VpcId
    Type: AWS::EC2::SecurityGroup
  SecurityGroupEFSServerEcsCluster:
    Condition: EFSFileSystemEcsCluster
    Properties:
      GroupDescription: Rule to access EFS FileSystem EcsCluster
      VpcId:
        Fn::ImportValue: VpcId
    Type: AWS::EC2::SecurityGroup
  SecurityGroupElasticSearch:
    Properties:
      GroupDescription: Assign to ElasticSearch Clients
      VpcId:
        Fn::ImportValue: VpcId
    Type: AWS::EC2::SecurityGroup
  SecurityGroupIngressEFSEcsCluster:
    Condition: EFSFileSystemEcsCluster
    Properties:
      FromPort: 2049
      GroupId:
        Fn::Sub: ${SecurityGroupEFSServerEcsCluster.GroupId}
      IpProtocol: tcp
      SourceSecurityGroupId:
        Ref: SecurityGroupEFSEcsCluster
      ToPort: 2049
    Type: AWS::EC2::SecurityGroupIngress
  SecurityGroupRDS:
    Properties:
      GroupDescription: Assign to RDS Client
      VpcId:
        Fn::ImportValue: VpcId
    Type: AWS::EC2::SecurityGroup


# vim: ft=python
import boto3
import os
import logging

logger = logging.getLogger()
logger.setLevel(logging.INFO)

env = os.environ["Env"]
envRole = os.environ["EnvRole"]


def set(config):
    for n, v in config.items():
        globals()[n] = v[env]

    set_ssm()


def set_ssm():
    pList = []
    client = boto3.client("ssm")
    paginator = client.get_paginator("describe_parameters")
    response_iterator = paginator.paginate(
        ParameterFilters=[
            {
                "Key": "Name",
                "Values": [f"/{envRole}/"],
                "Option": "Contains",
            }
        ],
    )

    for r in response_iterator:
        for p in r["Parameters"]:
            pList.append(p["Name"])

    while pList:
        pList_sub = pList[0:10]
        response = client.get_parameters(Names=pList_sub, WithDecryption=True)
        for p in response["Parameters"]:
            name = p["Name"].split("/")[2]
            name = name.replace("-", "_").upper()
            value = p["Value"]

            try:
                globals()[name] = value
            except Exception as e:
                logger.error(f"Error adding parameter {name} to cfg: {e}")
                pass
            else:
                logger.info(f"Success adding parameter {name} to cfg.")
        del pList[0:10]

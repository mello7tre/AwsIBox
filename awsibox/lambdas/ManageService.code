# vim: ft=python
import logging
from boto3 import client

logger = logging.getLogger()
logger.setLevel(logging.INFO)


def change_desired_size(svc, service_arn, variation):
    service_arn_l = service_arn.split('/')
    cluster = service_arn_l[1]
    service = service_arn_l[2]

    try:
        response = svc.describe_services(
            services=[service])

        if not response['services']:
            raise Exception(f'Service {service} not found!')
    except Exception as e:
        logger.error(f'Failed to describe {service}: {e}')
        return False

    currentSize = response['services'][0]['desiredCount']
    newSize = int(currentSize) + int(variation)

    try:
        response = svc.update_service(
            cluster=cluster,
            service=service,
            desiredCount=newSize)
    except Exception as e:
        logger.error(f'Failed to change Service '
                     f'{service} desiredCount to {newSize}: {e}')
        return False

    logger.info(f'Service {service} desiredCount changed to {newSize}')

    return True


def lambda_handler(event, context):
    svc = client('ecs')
    service_arn = event['service_arn']
    variation = event['variation']

    return change_desired_size(svc, service_arn, variation)

global:
  EC2SecurityGroupIngress:
    - EFS:
        IBOX_ENABLED: False
        FromPort: 2049
        GroupId: GetAtt(f"SecurityGroup{IBOX_LINKED_OBJ_NAME}Server", "GroupId")
        SourceSecurityGroupId: Ref(f"SecurityGroup{IBOX_LINKED_OBJ_NAME}Client")
        ToPort: 2049
    - EC2LoadBalancerClassic:
        IBOX_ENABLED: False
        FromPort: get_endvalue(f"{IBOX_LINKED_OBJ_NAME}Listeners{IBOX_LINKED_OBJ_INDEX}InstancePort")
        GroupId: GetAtt("SecurityGroupInstancesRules", "GroupId")
        SourceSecurityGroupId: Ref("SecurityGroupLoadBalancer")
        ToPort: get_endvalue(f"{IBOX_LINKED_OBJ_NAME}Listeners{IBOX_LINKED_OBJ_INDEX}InstancePort")
    - EC2LoadBalancerApplication:
        IBOX_ENABLED: False
        FromPort: get_endvalue(f"ElasticLoadBalancingV2TargetGroup{IBOX_LINKED_OBJ_NAME}Port")
        GroupId: GetAtt("SecurityGroupInstancesRules", "GroupId")
        SourceSecurityGroupId: Ref("SecurityGroupLoadBalancer")
        ToPort: get_endvalue(f"ElasticLoadBalancingV2TargetGroup{IBOX_LINKED_OBJ_NAME}Port")
    - EC2LoadBalancerNetwork:
        IBOX_ENABLED: False
        CidrIp: "0.0.0.0/0"
        FromPort: get_endvalue(f"ElasticLoadBalancingV2TargetGroup{IBOX_LINKED_OBJ_NAME}Port")
        SourceSecurityGroupId: Ref("SecurityGroupLoadBalancer")
        ToPort: get_endvalue(f"ElasticLoadBalancingV2TargetGroup{IBOX_LINKED_OBJ_NAME}Port")
    - ECSLoadBalancerApplication:
        IBOX_ENABLED: False
        CidrIp: '0.0.0.0/0'
        FromPort: get_endvalue(f'{IBOX_LINKED_OBJ_NAME}Port')
        GroupId: get_expvalue(f'SecurityGroupLoadBalancerApplication{IBOX_LINKED_OBJ_INDEX}', 'LoadBalancerApplicationStack')
        ToPort: get_endvalue(f'{IBOX_LINKED_OBJ_NAME}Port')

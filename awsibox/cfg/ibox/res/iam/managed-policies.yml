global:
  IAMManagedPolicy:
    - BaseInstance:
        Description: 'Policy common to all instances'
        PolicyDocument:
          Statement:
            - 1:
                Action:
                  - 's3:GetBucketLocation'
                  - 's3:ListAllMyBuckets'
                Effect: Allow
                Resource: 'arn:aws:s3:::*'
            - 2:
                Action:
                  - 's3:Get*'
                  - 's3:List*'
                Effect: Allow
                Resource:
                  - Sub('arn:aws:s3:::%s' % cfg.BucketNameAppRepository)
                  - Sub('arn:aws:s3:::%s/*' % cfg.BucketNameAppRepository)
                  - Sub('arn:aws:s3:::%s' % cfg.BucketNameAppData)
                  - Sub('arn:aws:s3:::%s/*' % cfg.BucketNameAppData)
                  - Sub('arn:aws:s3:::aws-codedeploy-${AWS::Region}')
                  - Sub('arn:aws:s3:::aws-codedeploy-${AWS::Region}/*')
            - 3:
                Action:
                  - 'elasticloadbalancing:DescribeInstanceHealth'
                  - 'elasticloadbalancing:DescribeTargetHealth'
                  - 'ec2:DescribeInstances'
                Effect: Allow
                Resource: '*'
    - CloudWatchPutMetric:
        Description: 'Policy for ecs-task to put CW metric data'
        PolicyDocument:
          Statement:
            - 1:
                Action:
                  - 'cloudwatch:PutMetricData'
                Effect: Allow
                Resource: '*'
    - Ecs:
        Description: 'EcsCluster'
        PolicyDocument:
          Statement:
            - 1:
                Action:
                  - 'ecs:CreateCluster'
                  - 'ecs:DeregisterContainerInstance'
                  - 'ecs:DiscoverPollEndpoint'
                  - 'ecs:Poll'
                  - 'ecs:RegisterContainerInstance'
                  - 'ecs:StartTelemetrySession'
                  - 'ecs:Submit*'
                  - 'ecs:UpdateContainerInstancesState'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:BatchGetImage'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:GetAuthorizationToken'
                Effect: Allow
                Resource: '*'
    - SSM:
        Description: "Policy to let Instances Manage SSM"
        PolicyDocument:
          Statement:
            - 1:
                Action:
                  - 'ssm:DescribeAssociation'
                  - 'ssm:GetDeployablePatchSnapshotForInstance'
                  - 'ssm:GetDocument'
                  - 'ssm:GetManifest'
                  - 'ssm:GetParameters'
                  - 'ssm:ListAssociations'
                  - 'ssm:ListInstanceAssociations'
                  - 'ssm:PutInventory'
                  - 'ssm:PutComplianceItems'
                  - 'ssm:PutConfigurePackageResult'
                  - 'ssm:UpdateAssociationStatus'
                  - 'ssm:UpdateInstanceAssociationStatus'
                  - 'ssm:UpdateInstanceInformation'
                Effect: Allow
                Resource: '*'
            - 2:
                Action:
                  - 'ssmmessages:CreateControlChannel'
                  - 'ssmmessages:CreateDataChannel'
                  - 'ssmmessages:OpenControlChannel'
                  - 'ssmmessages:OpenDataChannel'
                Effect: Allow
                Resource: '*'
            - 3:
                Action:
                  - 'ec2messages:AcknowledgeMessage'
                  - 'ec2messages:DeleteMessage'
                  - 'ec2messages:FailMessage'
                  - 'ec2messages:GetEndpoint'
                  - 'ec2messages:GetMessages'
                  - 'ec2messages:SendReply'
                Effect: Allow
                Resource: '*'
            - 4:
                Action: 'cloudwatch:PutMetricData'
                Effect: Allow
                Resource: '*'
            - 5:
                Action: 'ec2:DescribeInstanceStatus'
                Effect: Allow
                Resource: '*'
            - 6:
                Action:
                  - 'ds:CreateComputer'
                  - 'ds:DescribeDirectories'
                Effect: Allow
                Resource: '*'
            - 7:
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: '*'
            - 8:
                Action:
                  - 's3:GetObject'
                Effect: Allow
                Resource:
                  - Sub('arn:aws:s3:::aws-ssm-${AWS::Region}/*')
                  - Sub('arn:aws:s3:::amazon-ssm-${AWS::Region}/*')
                  - Sub('arn:aws:s3:::amazon-ssm-packages-${AWS::Region}/*')
                  - Sub('arn:aws:s3:::${AWS::Region}-birdwatcher-prod/*')

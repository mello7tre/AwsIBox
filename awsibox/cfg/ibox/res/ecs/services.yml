global:
  ECSService:
    - Base:
        IBOX_TITLE: Service
        DesiredCount: get_endvalue('CapacityDesired')
        DeploymentConfiguration:
          DeploymentCircuitBreaker:
            Enable.IBOX_AUTO_PO: {}
            Enable: true
            Rollback.IBOX_AUTO_PO: {}
            Rollback: true
          MaximumPercent.IBOX_AUTO_PO: {}
          MaximumPercent: 200
          MinimumHealthyPercent.IBOX_AUTO_PO: {}
          MinimumHealthyPercent: 100
        PlacementStrategies:
          - IBOX_IF:
              - ECSTasksLaunchOnFargate
              - Ref('AWS::NoValue')
              - IBOX_IFVALUE
          - 0:
              IBOX_OUTPUT:
                - IBOX_CURMAP:
                    Value: Type= ${Type} ,Field= ${Field}
              Type.IBOX_AUTO_P:
                AllowedValues: ['', 'binpack', 'random', 'spread']
              Type: spread
              Field.IBOX_PCO:
                IBOX_CONDITION:
                  - IBOX_CURMAP.TypeRandom:
                      get_condition('', 'equals', 'random', f'{IBOX_CURMAP}Type')
              Field.IBOX_AUTO_P: {}
              Field.IBOX_CODE: If(
                f'{IBOX_CURMAP}TypeRandom', Ref('AWS::NoValue'),
                get_endvalue(IBOX_CURNAME))
              Field: instanceId
          - 1:
              IBOX_IF:
                - IBOX_CURMAP.TypeNone
                - Ref('AWS::NoValue')
                - IBOX_IFVALUE
              IBOX_OUTPUT:
                - IBOX_CURMAP:
                    Value: Type= ${Type} ,Field= ${Field}
              Type.IBOX_AUTO_P:
                AllowedValues: ['', 'none', 'binpack', 'random', 'spread']
              Type: 'none'
              Field.IBOX_PCO:
                IBOX_CONDITION:
                  - IBOX_CURMAP.TypeRandom:
                      get_condition('', 'equals', 'random', f'{IBOX_CURMAP}Type')
                  - IBOX_CURMAP.TypeNone:
                      get_condition('', 'equals', 'none', f'{IBOX_CURMAP}Type')
              Field.IBOX_AUTO_P: {}
              Field.IBOX_CODE: If(
                f'{IBOX_CURMAP}TypeRandom', Ref('AWS::NoValue'),
                get_endvalue(IBOX_CURNAME))
              Field: 'attribute:ecs.availability-zone'
        SchedulingStrategy: REPLICA
    - Daemon:
        SchedulingStrategy: DAEMON
        LaunchType: EC2
    - Spot:
        CapacityProviderStrategy:
          - FargateSpot:
              Base: 1
              CapacityProvider: FARGATE_SPOT
              Weight: 1
        DesiredCount: get_endvalue('CapacityDesired')

IAMUserManageOwn: &iam_user_manage_own
  Description: 'Manage Own IAM resources'
  PolicyDocument:
    Statement:
      - 1:
          Action:
            - 'iam:*LoginProfile'
            - 'iam:*AccessKey*'
            - 'iam:*AccessKey*'
            - 'iam:*SSHPublicKey*'
            - 'iam:GenerateCredentialReport'
            - 'iam:GenerateServiceLastAccessedDetails'
            - 'iam:ChangePassword'
          Effect: Allow
          Resource: 'arn:aws:iam::*:user/${aws:username}'
      - 2:
          Action:
            - 'iam:ListUsers'
            - 'iam:ListRoles'
          Effect: Allow
          Resource: '*'

S3ListBuckets: &s3_list_buckets
  Description: 'List Buckets'
  PolicyDocument:
    Statement:
      - 1:
          Action:
            - 's3:GetBucketLocation'
            - 's3:ListAllMyBuckets'
          Effect: Allow
          Resource: 'arn:aws:s3:::*'

PowerUserAccessNoSSM: &power_user_access_no_ssm
  Description: 'Provides full access apart management of Users and groups, Direct Access to SSM Parameters.'
  PolicyDocument:
    Statement:
      - IAMAllowed:
          Action:
            - 'iam:CreateServiceLinkedRole'
            - 'iam:DeleteServiceLinkedRole'
            - 'iam:Get*'
            - 'iam:List*'
            - 'iam:SimulateCustomPolicy'
            - 'iam:SimulatePrincipalPolicy'
            - 'iam:PassRole'
            - 'organizations:DescribeOrganization'
          Effect: Allow
          Resource: '*'
      - MISCDenied:
          NotAction:
            - 'iam:*'
            - 'organizations:*'
            - 'ssm:*'
          Effect: Allow
          Resource: '*'
      - SSMAllowed:
          Action:
            - 'ssm:GetParameter*'
          Effect: Allow
          Resource:
            - 'arn:aws:ssm:*:*:parameter/aws/service/ecs/optimized-ami/amazon-linux/recommended/image_id'
            - 'arn:aws:ssm:*:*:parameter/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id'


LogsRead: &logs_read
  PolicyDocument:
    Statement:
      - 1:
          Action:
            - 'logs:Describe*'
            - 'logs:Get*'
            - 'logs:List*'
            - 'logs:StartQuery'
            - 'logs:StopQuery'
            - 'logs:TestMetricFilter'
            - 'logs:FilterLogEvents'
          Effect: Allow
          Resource: '*'

EcrRead: &ecr_read
  PolicyDocument:
    Statement:
      - 1:
          Action:
            - 'ecr:GetAuthorizationToken'
            - 'ecr:DescribeRepositories'
            - 'ecr:ListImages'
          Effect: Allow
          Resource: '*'

CloudwatchMetricsRead: &cloudwatch_metrics_read
  PolicyDocument:
    Statement:
      - 1:
          Action:
            - 'cloudwatch:ListMetrics'
            - 'cloudwatch:ListDashboards'
            - 'cloudwatch:GetMetricData'
            - 'cloudwatch:GetMetricStatistics'
            - 'cloudwatch:GetDashboard'
          Effect: Allow
          Resource: '*'

SSMParameterStoreBase: &ssm_parameter_store_base
  PolicyDocument:
    Statement:
      - KMSListAliases:
          Action:
            - 'kms:ListAliases'
            - 'ssm:DescribeParameters'
          Effect: Allow
          Resource: '*'
      - KMSDecrypt:
          Action:
            - 'kms:Decrypt'
            - 'kms:Encrypt'
          Effect: Allow
          Resource: ImportValue('KeyParameterStore')


global:
  StackName: iam-g-01
  IAMGroup:
    - IBOX_BASE:
        Policies:
          - IBOX_BASE:
              PolicyName: str(IBOX_PROPNAME)
    - Base:
        IBOX_ENABLED: False
        Policies:
          - IAMUserManageOwn: *iam_user_manage_own
          - S3ListBuckets: *s3_list_buckets
    - Power:
        IBOX_ENABLED: False
        Policies:
          - IAMUserManageOwn: *iam_user_manage_own
          - PowerUserAccessNoSSM: *power_user_access_no_ssm
          - SSMParameterStoreBase: *ssm_parameter_store_base
    - Developer:
        IBOX_ENABLED: False
        Policies:
          - SSMParameterStoreBase: *ssm_parameter_store_base
          - CloudwatchMetricsRead: *cloudwatch_metrics_read
          - EcrRead: *ecr_read
          - LogsRead: *logs_read
    - CloudWatchRead:
        IBOX_ENABLED: False
        Policies:
          - CloudwatchMetricsRead: *cloudwatch_metrics_read
          - LogsRead: *logs_read

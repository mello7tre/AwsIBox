IBoxLoader: !include
  - com/elasticloadbalancing/loadbalancer.yml

global:
  Parameter:
    - LoadBalancer:
        Description: "Comma delimited list of enabled LoadBalancer - empty for mapped value - none to disable"
        AllowedValues: ["", "none", "External", "Internal", "External,Internal"]
  Condition:
    - LoadBalancerExternal:
        Or(
          And(
            Condition("LoadBalancerOverride"),
            Or(
              Equals(Ref("LoadBalancer"), "External"),
              Equals(Ref("LoadBalancer"), "External,Internal"),
            )
          ),
          And(
            Not(Condition("LoadBalancerOverride")),
            Or(
              Equals(get_endvalue("LoadBalancer"), "External"),
              Equals(get_endvalue("LoadBalancer"), "External,Internal"),
            )
          )
        )
    - LoadBalancerInternal:
        Or(
          And(
            Condition("LoadBalancerOverride"),
            Or(
              Equals(Ref("LoadBalancer"), "Internal"),
              Equals(Ref("LoadBalancer"), "External,Internal"),
            )
          ),
          And(
            Not(Condition("LoadBalancerOverride")),
            Or(
              Equals(get_endvalue("LoadBalancer"), "Internal"),
              Equals(get_endvalue("LoadBalancer"), "External,Internal"),
            )
          )
        )
    - LoadBalancerNone:
        And(
          Not(Condition("LoadBalancerExternal")),
          Not(Condition("LoadBalancerInternal")),
        )
    - LoadBalancerExternalOrInternal:
        Or(
          Condition("LoadBalancerExternal"),
          Condition("LoadBalancerInternal"),
        )
  Output:
    - LoadBalancer:
        Value: get_endvalue('LoadBalancer')
  ElasticLoadBalancingLoadBalancer:
    - IBOX_BASE:
        IBOX_ENABLED_IF: cfg.LoadBalancerType == "Classic"
        IBOX_LINKED_OBJ:
          Alarm:
              Key: CloudWatchAlarm
              Name: IBOX_TITLE.Backend5XX
              Type: IBOX_TITLE.Backend5XX
              Conf:
                Condition: AlarmBackend5XXAnd.IBOX_TITLE
          SecurityGroupIngress:
              Key: EC2SecurityGroupIngress
              Type: ELBListener
              For: getattr(cfg, IBOX_RESNAME)["Listeners"]
              Conf:
                IBOX_TITLE: SecurityGroupIngressListeners.IBOX_LINKED_OBJ_FOR
                IBOX_LINKED_OBJ_NAME: IBOX_RESNAME
                IBOX_LINKED_OBJ_INDEX: IBOX_LINKED_OBJ_FOR
        IBOX_CONDITION:
          - AlarmBackend5XXAnd.IBOX_TITLE:
              And(
                Condition(f"CloudWatchAlarm{IBOX_TITLE}Backend5XX"),
                Condition(getattr(cfg, IBOX_RESNAME)["Condition"]))
    - EC2ClassicExternal:
        IBOX_TITLE: LoadBalancerClassicExternal
        Condition: LoadBalancerExternal
        Scheme: 'internet-facing'
        Subnets: Split(',', get_expvalue('SubnetsPublic'))
    - EC2ClassicInternal:
        IBOX_TITLE: LoadBalancerClassicInternal
        Condition: LoadBalancerInternal
        Scheme: 'internal'
        Subnets: Split(',', get_expvalue('SubnetsPrivate'))
  LoadBalancer: ''
  Route53RecordSet:
    - EC2External:
        IBOX_ENABLED: True
        Condition: LoadBalancerExternalOrInternal
    - EC2Internal:
        IBOX_ENABLED: True
        Condition: LoadBalancerInternal

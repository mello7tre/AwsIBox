Base: &base
  IBOX_PARAMETER:
    - _DesiredSize:
        Description: 'k to keep current value - empty for mapped value'
    - _MinSize:
        Description: 'k to keep current value - empty for mapped value'
    - _MaxSize:
        Description: 'k to keep current value - empty for mapped value'
    - _Recurrence:
        Description: 'empty for mapped value - "none" to disable'
    - _StartTime:
        Description: ''
  IBOX_CONDITION:
    - _KeepDesiredSize:
        get_condition('', 'equals', 'k', f'{IBOXRESNAME}DesiredSize')
    - _KeepMinSize:
        get_condition('', 'equals', 'k', f'{IBOXRESNAME}MinSize')
    - _KeepMaxSize:
        get_condition('', 'equals', 'k', f'{IBOXRESNAME}MaxSize')
    - _CapacityDesiredSize:
        get_condition('', 'equals', 'CapacityDesired', f'{IBOXRESNAME}DesiredSize')
    - _CapacityMinSize:
        get_condition('', 'equals', 'CapacityMin', f'{IBOXRESNAME}MinSize')
    - _CapacityMaxSize:
        get_condition('', 'equals', 'CapacityMax', f'{IBOXRESNAME}MaxSize')
    - _:
        get_condition('', 'not_equals', 'none', f'{IBOXRESNAME}Recurrence')
  IBOX_OUTPUT:
    - _:
        Value: >-
          DesiredSize= ${DesiredCapacity} ,MinSize= ${MinSize} ,MaxSize= ${MaxSize}
          ,Recurrence= ${Recurrence} ,StartTime= ${StartTime}
  Condition: IBOXRESNAME
  AutoScalingGroupName: Ref('AutoScalingGroup')
  DesiredCapacity.IBOX_CODE: If(
    f'{IBOXRESNAME}CapacityDesiredSize',
    get_endvalue('CapacityDesired'),
    get_endvalue(f'{IBOXRESNAME}DesiredSize', nocondition=f'{IBOXRESNAME}KeepDesiredSize'))
  MinSize.IBOX_CODE: If(
    f'{IBOXRESNAME}CapacityMinSize',
    get_endvalue('CapacityMin'),
    get_endvalue(f'{IBOXRESNAME}MinSize', nocondition=f'{IBOXRESNAME}KeepMinSize'))
  MaxSize.IBOX_CODE: If(
    f'{IBOXRESNAME}CapacityMaxSize',
    get_endvalue('CapacityMax'),
    get_endvalue(f'{IBOXRESNAME}MaxSize', nocondition=f'{IBOXRESNAME}KeepMaxSize'))


global:
  ScheduledAction:
    - IBOX_BASE:
        <<: *base
        StartTime: Ref('AWS::NoValue')

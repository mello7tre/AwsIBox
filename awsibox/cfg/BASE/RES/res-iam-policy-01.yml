IBoxLoader: !include [
  iam/iam-policy.yml,
]

res-iam-policy-01:
  StackName: iam-p-01
  IAMPolicy:
    - SSMParameterStoreBase:
        IBOX_ENABLED: True
    - LogRead:
        IBOX_ENABLED: True
    - MetricRead:
        IBOX_ENABLED: True
    - ECRRead:
        IBOX_ENABLED: True
    - RDSRead:
        IBOX_ENABLED: True
    - Developer:
        IBOX_ENABLED: True
    - BackEndDeveloper:
        IBOX_ENABLED: True
    - BackEndTechLead01:
        IBOX_ENABLED: True
    - IAMUserManageOwn:
        Export: True
        Type: Managed
        Description: 'Manage Own IAM resources'
        Statement:
          - 1:
              Action:
                - 'iam:*LoginProfile'
                - 'iam:*AccessKey*'
                - 'iam:*AccessKey*'
                - 'iam:*SSHPublicKey*'
                - 'iam:GenerateCredentialReport'
                - 'iam:GenerateServiceLastAccessedDetails'
                - 'iam:ChangePassword'
              Resource: 'arn:aws:iam::*:user/${aws:username}'
          - 2:
              Action:
                - 'iam:ListUsers'
              Resource: '*'
    - S3ListBuckets:
        Export: True
        Type: Managed
        Description: 'List Buckets'
        Statement:
          - 1:
              Action:
                - 's3:GetBucketLocation'
                - 's3:ListAllMyBuckets'
              Resource: 'arn:aws:s3:::*'
    - PowerUserAccessNoSSM:
        Export: True
        Type: Managed
        Description: 'Provides full access apart management of Users and groups, Direct Access to SSM Parameters.'
        Statement:
          - 1:
              Action:
                - 'iam:CreateServiceLinkedRole'
                - 'iam:DeleteServiceLinkedRole'
                - 'iam:Get*'
                - 'iam:List*'
                - 'iam:SimulateCustomPolicy'
                - 'iam:SimulatePrincipalPolicy'
                - 'iam:PassRole'
                - 'organizations:DescribeOrganization'
              Resource: '*'
          - 2:
              NotAction:
                - 'iam:*'
                - 'organizations:*'
                - 'ssm:*'
              Resource: '*'
          - 3:
              Action:
                - 'ssm:GetParameter*'
              Resource:
                - 'arn:aws:ssm:*:*:parameter/aws/service/ecs/optimized-ami/amazon-linux/recommended/image_id'
                - 'arn:aws:ssm:*:*:parameter/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id'
    - STSAssumeRoleOwn:
        Export: True
        Type: Managed
        Description: 'Assume UserName Role'
        Statement:
          - 1:
              Action:
                - 'sts:AssumeRole'
              Resource: 'arn:aws:iam::*:role/${aws:username}'
    - LogFilter:
        Export: True
        Type: Managed
        Description: 'Filter CloudWatch Logs'
        Statement:
          - 1:
              Action:
                - 'logs:PutMetricFilter'
              Resource: '*'
    - LogGroupsDescribe:
        Export: True
        Type: Managed
        Description: 'Describe CloudWatch Log Groups'
        Statement:
          - 1:
              Action:
                - 'logs:DescribeLogGroups'
              Resource: '*'
    - LogReadJoker01:
        Export: True
        Type: Managed
        Description: 'Read CloudWatch Logs - Joker'
        Statement:
          - 1:
              Action:
                - 'logs:Describe*'
                - 'logs:FilterLogEvents'
                - 'logs:Get*'
              Resource: '*'
    - MetricWrite:
        Export: True
        Type: Managed
        Description: 'Write CloudWatch Custom Metrics'
        Statement:
          - 1:
              Action:
                - 'cloudwatch:PutMetricData'
              Resource: '*'
    - CloudFrontInvalidate:
        Export: True
        Type: Managed
        Description: 'CloudFront Console ReadAccess and Create Invalidations'
        Statement:
          - 1:
              Action:
                - 'acm:ListCertificates'
                - 'cloudfront:List*'
                - 'cloudfront:Get*'
                - 'cloudfront:CreateInvalidation'
                - 'waf:GetWebACL'
                - 'waf:ListWebACLs'
              Resource: '*'

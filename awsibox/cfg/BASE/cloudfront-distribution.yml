Distribution: &distribution
  Enabled: True
  HttpVersion: get_endvalue('CloudFrontHttpVersion')
  Logging:
    IBOXIF:
      - CloudFrontLogging
      - IBOXIFVALUE
      - Ref('AWS::NoValue')
    Bucket: Sub(f'{cfg.BucketLogs}.s3.amazonaws.com')
    Prefix: Sub('${EnvRole}.${AWS::StackName}/')
  PriceClass: PriceClass_100
  ViewerCertificate:
    AcmCertificateArn: If('CloudFrontAcmCertificate', get_endvalue('GlobalCertificateArn'), Ref('AWS::NoValue'))
    CloudFrontDefaultCertificate: If('CloudFrontAcmCertificate', Ref('AWS::NoValue'), 'True')
    SslSupportMethod: If('CloudFrontAcmCertificate', 'sni-only', Ref('AWS::NoValue'))
    MinimumProtocolVersion: If('CloudFrontAcmCertificate', get_endvalue('CloudFrontMinimumProtocolVersion'), Ref('AWS::NoValue'))
  WebACLId: get_endvalue('CloudFrontWebACLId', condition=True)

Origin: &origin
  IBOXPARAMETER:
    - IBOXRESNAMEDomainName:
        Description: 'empty for mapped value'
  CustomOriginConfig:
    IBOXPARAMETER:
      - IBOXRESNAMECustomOriginConfigHTTPSPort:
          Description: 'empty for mapped value'
    OriginProtocolPolicy: https-only
  OriginPath: ''
  S3OriginConfig:
    IBOXPARAMETER:
      - IBOXRESNAMES3OriginConfigOriginAccessIdentity:
          Description: 'empty for mapped value'

global:
  CloudFrontDistribution:
    - IBOXBASE: *distribution
  CloudFrontOrigins:
    - IBOXBASE: *origin

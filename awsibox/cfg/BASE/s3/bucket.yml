IBoxLoader: !include
  - bucket-policy.yml
  - iam/policy-bucket-replica.yml

Base: &base
  IBOX_LINKED_OBJ:
    IAMRole:
      Key: IAMRole
      Type: BucketReplica
      Conf:
        IBOX_RESNAME: Role.IBOX_RESNAME.Replica
        Condition: IBOX_RESNAME.Replica
    IAMPolicy:
      Key: IAMPolicy
      Type: BucketReplica
      Conf:
        IBOX_RESNAME: IAMPolicyReplica.IBOX_RESNAME
        IBOX_LINKED_OBJ_NAME: IBOX_REMAPNAME
        IBOX_LINKED_OBJ_INDEX: IBOX_RESNAME
  IBOX_CONDITION:
    - _:
        get_condition("", "equals", "yes", f"{IBOX_RESNAME}Create")
    - _Cors:
        get_condition("", "equals", "yes", f"{IBOX_RESNAME}Cors")
    - _PolicyStatementReplicaPrincipal:
        get_condition("", "not_equals", "none", f"{IBOX_RESNAME}PolicyStatementReplicaPrincipal")
    - _Replica:
        And(Condition(IBOX_RESNAME), get_condition("", "equals", "yes", f"{IBOX_RESNAME}ReplicationConfigurationEnabled"))
    - _Versioning:
        get_condition("", "not_equals", "Disabled", f"{IBOX_RESNAME}VersioningConfigurationStatus")
  IBOX_OUTPUT:
    - _:
        Value: If(IBOX_RESNAME, Ref(IBOX_RESNAME), Sub(IBOX_REMAPNAME))
  OutputValueRegion.IBOX_PCO:
    IBOX_CONDITION:
      - _OutputValueRegion:
          get_condition("", "not_equals", "AWSRegion", f"{IBOX_RESNAME}OutputValueRegion")
    IBOX_OUTPUT:
      - _:
          Condition: None
          Export: Export(IBOX_RESNAME)
          Value: >-
            If(f"{IBOX_RESNAME}OutputValueRegion",
               Sub("${Region}-%s" % IBOX_REMAPNAME.replace("${AWS::Region}-", "", 1),
                   **{"Region": get_endvalue(f"{IBOX_RESNAME}OutputValueRegion")}),
               If(IBOX_RESNAME, Ref(IBOX_RESNAME), Sub(IBOX_REMAPNAME))
            )
  Condition: IBOX_RESNAME
  BucketName: Sub(IBOX_REMAPNAME)
  Create: "no"
  AccountsRead:
    dev: none
    stg: none
    prd: none
  AccountsWrite:
    dev: none
    stg: none
    prd: none
  AccountsDelete:
    dev: none
    stg: none
    prd: none
  Cors: "no"
  CorsConfiguration:
    IBOX_IF:
      - _Cors
      - IBOX_IFVALUE
      - Ref("AWS::NoValue")
    CorsRules:
      - 0:
          AllowedHeaders: ["Authorization"]
          AllowedMethods: ["GET"]
          AllowedOrigins: ["*"]
          MaxAge: 3000
  CloudFrontOriginAccessIdentity.IBOX_PCO_NO:
    IBOX_CONDITION:
      - IBOX_CURNAME:
          And(
            Condition(IBOX_RESNAME),
            get_condition("", "not_equals", "none", IBOX_CURNAME)
          )
  CloudFrontOriginAccessIdentityExtra:
    Dev: none
    Stg: none
    Prd: none
  PolicyStatementCloudFrontOriginAccessIdentityPrincipal:
    - base:
        Conf:
          IBOX_LINKED_OBJ:
            Key: CloudFrontOriginAccessIdentity
            Type: Base
            Name: CloudFrontOriginAccessIdentity.IBOX_INDEXNAME
            Conf:
              Condition: CloudFrontOriginAccessIdentity.IBOX_INDEXNAME
              IBOX_RESNAME: CloudFrontOriginAccessIdentity.IBOX_INDEXNAME
          IBOX_CONDITION:
            - CloudFrontOriginAccessIdentity.IBOX_INDEXNAME:
                And(
                  Condition(f"Bucket{IBOX_INDEXNAME}"),
                  get_condition("", "not_equals", "none", f"{IBOX_CURNAME}baseValue")
                )
        Value: Ref(f"CloudFrontOriginAccessIdentity{IBOX_INDEXNAME}")
    - dev: IBOX_IFCONDVALUE
    - stg: IBOX_IFCONDVALUE
    - prd: IBOX_IFCONDVALUE
  PolicyStatementReplica:
    Resource: {}
    Principal: none
  ReplicationConfiguration:
    IBOX_IF:
      - _Replica
      - IBOX_IFVALUE
      - Ref("AWS::NoValue")
    Enabled: "no"
    Role: GetAtt(f"Role{IBOX_RESNAME}Replica", "Arn")
    Rules:
      - IBOX_BASE:
          IBOX_IF:
            - IBOX_CURNAME.DestinationBucket
            - IBOX_IFVALUE
            - Ref("AWS::NoValue")
          Destination:
            Bucket.IBOX_PCO:
              IBOX_PARAMETER:
                - IBOX_CURNAME:
                    Description: "Replica Destination Bucket - empty for default based on Env/Roles/Region"
              IBOX_CONDITION:
                - IBOX_CURNAME:
                    get_condition("", "not_equals", "none", IBOX_CURNAME)
          Status: Enabled
  VersioningConfiguration:
    IBOX_IF:
      - _Versioning
      - IBOX_IFVALUE
      - Ref("AWS::NoValue")
    Status.IBOX_AUTO_PO:
      AllowedValues: ["", "Enabled", "Suspended", "Disabled"]
    Status: Disabled


global:
  IBOX_CUSTOM_OBJ:
    - PolicyStatementCloudFrontOriginAccessIdentityPrincipal:
        Value: 'Sub("arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}", **{"CloudFrontOriginAccessIdentity": get_endvalue(f"{IBOX_MAPNAME}{IBOX_RESNAME}")})'
  Bucket:
    - IBOX_BASE: *base

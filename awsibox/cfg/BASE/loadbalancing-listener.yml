global:
  Parameter:
    - ListenerLoadBalancerHttpPort:
        Description: 'Http Port where Load Balancer listen - empty for default based on env/role'
    - ListenerLoadBalancerHttpsPort:
        Description: 'Http Port where Load Balancer listen - empty for default based on env/role'
  Condition:
    - ListenerLoadBalancerHttpPort:
        get_condition('', 'not_equals', 'None', 'ListenerLoadBalancerHttpPort')
    - ListenerLoadBalancerHttpsPort:
        get_condition('', 'not_equals', 'None', 'ListenerLoadBalancerHttpsPort')
  Listener:
    - Classic:
        PolicyNames:
          - If('LoadBalancerCookieSticky', 'LBCookieStickinessPolicy', Ref('AWS::NoValue'))
        SSLCertificateId: If('ListenerLoadBalancerHttpsPort', get_endvalue('RegionalCertificateArn'), Ref('AWS::NoValue'))
    - Http:
        Port: get_endvalue('ListenerLoadBalancerHttpPort')
        Protocol: HTTP
    - Https:
        Certificates:
          Regional:
            CertificateArn: get_endvalue('RegionalCertificateArn')
        Port: get_endvalue('ListenerLoadBalancerHttpsPort')
        Protocol: HTTPS
        SslPolicy: get_endvalue('ListenerLoadBalancerSslPolicy')
  ListenerLoadBalancerHttpPort: 80
  ListenerLoadBalancerHttpsPort: 443
  ListenerLoadBalancerSslPolicy: ELBSecurityPolicy-2016-08

global:
  IAMPolicyInRole:
    - LambdaECSDrainInstance:
        Statement:
          - 1:
              Action: 'autoscaling:CompleteLifecycleAction'
              Resource: '*'
          - 2:
              Action:
                - 'ecs:ListContainerInstances'
                - 'ecs:ListTasks'
                - 'ecs:DescribeTasks'
              Resource: '*'
          - 3:
              Action:
                - 'ecs:DescribeContainerInstances'
                - 'ecs:UpdateContainerInstancesState'
              Resource: '*'
          - 4:
              Action: 'sns:Publish'
              Resource: Ref('SNSTopicECSDrainInstance')
          - 5:
              Action: 'cloudformation:ListExports'
              Resource: '*'
  Lambda:
    - ECSDrainInstance:
        Description: 'Gracefully drain ECS tasks from EC2 instances before the instances are terminated by autoscaling.'
        MemorySize: 128
        Runtime: python3.9
        Timeout: 300
        Variables: []
  IAMRole:
    - ASGLifecycleHookECSDrainInstance:
        Export: True
        Principal: autoscaling.amazonaws.com
        Policies:
          - ASGLifecycleHookECSDrainInstance:
              PolicyDocument:
                Statement:
                  - IBOX_LIST:
                    Action: 'sns:Publish'
                    Effect: Allow
                    Resource: Ref('SNSTopicECSDrainInstance')
                Version: '2012-10-17'
              PolicyName: ASGLifecycleHookECSDrainInstance
  SNSSubscription:
    - ECSDrainInstanceLambdaECSDrainInstance:
        TopicArn: Ref('SNSTopicECSDrainInstance')
        Endpoint: GetAtt('LambdaECSDrainInstance', 'Arn')
        Protocol: lambda
  SNSTopic:
    - ECSDrainInstance:
        Export: True

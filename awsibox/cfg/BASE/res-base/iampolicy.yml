global:
  IAMPolicy:
    - BaseInstance:
        Type: Managed
        Export: True
        Description: 'Policy common to all instances'
        Statement:
          - 1:
              Action:
                - 's3:GetBucketLocation'
                - 's3:ListAllMyBuckets'
              Resource: 'arn:aws:s3:::*'
          - 2:
              Action:
                - 's3:Get*'
                - 's3:List*'
              Resource:
                - Sub('arn:aws:s3:::%s' % cfg.BucketAppRepository)
                - Sub('arn:aws:s3:::%s/*' % cfg.BucketAppRepository)
                - Sub('arn:aws:s3:::%s' % cfg.BucketAppData)
                - Sub('arn:aws:s3:::%s/*' % cfg.BucketAppData)
                - Sub('arn:aws:s3:::aws-codedeploy-${AWS::Region}')
                - Sub('arn:aws:s3:::aws-codedeploy-${AWS::Region}/*')
          - 3:
              Action:
                - 'elasticloadbalancing:DescribeInstanceHealth'
                - 'elasticloadbalancing:DescribeTargetHealth'
                - 'ec2:DescribeInstances'
              Resource: '*'
    - CloudWatchPutMetric:
        Type: Managed
        Export: True
        Description: 'Policy for ecs-task to put CW metric data'
        Statement:
          - 1:
              Action:
                - 'cloudwatch:PutMetricData'
              Resource: '*'
    - Ecs:
        Type: Managed
        Export: True
        Description: 'EcsCluster'
        Statement:
          - 1:
              Action:
                - 'ecs:CreateCluster'
                - 'ecs:DeregisterContainerInstance'
                - 'ecs:DiscoverPollEndpoint'
                - 'ecs:Poll'
                - 'ecs:RegisterContainerInstance'
                - 'ecs:StartTelemetrySession'
                - 'ecs:Submit*'
                - 'ecs:UpdateContainerInstancesState'
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
                - 'ecr:BatchCheckLayerAvailability'
                - 'ecr:BatchGetImage'
                - 'ecr:GetDownloadUrlForLayer'
                - 'ecr:GetAuthorizationToken'
              Resource: '*'

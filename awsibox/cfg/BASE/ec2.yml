IBoxLoader: !include [
  autoscaling.yml,
  loadbalancing-elb.yml,
  securitygroup.yml,
  alarms.yml,
  cloudfront-ios.yml,
  parameterstore.yml,
  imageid-ec2.yml,
  launchtemplate.yml,
]

ec2:
  Parameter:
    - UpdateMode:
        Description: 'How to update Instances'
        AllowedValue: ['None', 'Replace', 'Rolling', 'CodeDeploy', 'Cfn']
        Default: 'None'
    - HealthCheckGracePeriod:
        Description: 'How long to wait before ASG check instance health - empty for default based on env/role'
    - ImageIdLatest:
        Description: 'Latest Amazon Linux2 ami available from SSM'
        Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
        AllowedValues:
          - '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
        Type: 'AWS::SSM::Parameter::Value<String>'
    - SpotPrice:
        Description: 'Maximum Spot Price of ASG - empty for default based on env/role - 0 to disable'
  Condition:
    - ImageIdLatest:
        get_condition('', 'equals', 'latest', 'ImageId')
    - RollingUpdate:
        Equals(Ref('UpdateMode'), 'Rolling')
    - WillReplace:
        Equals(Ref('UpdateMode'), 'Replace')
    - SpotPrice:
        get_condition('', 'not_equals', '0', 'SpotPrice')
    - Spot:
        And(
          Condition('SpotPrice'),
          Equals('1', '1'),
        )
  Output:
    - UpdateMode:
        Value: Ref('UpdateMode')
  MappingClass:
    - EC2:
  AdditionalStorage:
    Mount: True
    Name: /dev/xvdx
    Size: 0
    Type: gp2
  AlarmCPUBase: &cpu
    Dimensions:
      - Autoscaling:
          Name: AutoScalingGroupName
          Value: Ref('AutoScalingGroup')
    Namespace: 'AWS/EC2'
  Alarm:
    - CPUHigh:
        <<: *cpu
        Enabled: True
    - CPULow:
        <<: *cpu
        Enabled: True
  AutoscalingCreationTimeout: PT15M
  CustomUserDataScript: init.sh
  DeploymentGroup: False
  HealthCheckType: ELB
  HealthCheckGracePeriod: 600
  InstanceMonitoring: False
  InstanceType: t3.micro
  LoadBalancer:
    CookieSticky: None
    IdleTimeout: 60
  IAMPolicy:
    - CloudFormation:
        Roles:
          - Ref('RoleInstance')
        Statement:
          - 1:
              Action:
                - 'cloudformation:DescribeStackResource'
                - 'cloudformation:SignalResource'
              Resource: Sub('arn:aws:cloudformation:*:*:stack/${AWS::StackName}/*')
    - ParameterStore:
        Roles:
          - Ref('RoleInstance')
  Role:
    - Instance:
        ManagedPolicyArns:
          - get_expvalue('IAMPolicyBaseInstance')
          - get_expvalue('IAMPolicySSM')
        Principal: ec2.amazonaws.com
  RollingUpdate:
    MaxBatchSize: 1
    MinInstancesInService: 1
    MinSuccessfulInstancesPercent: 100
    PauseTime: PT20M
  ScalingPolicyTrackings:
    - ASCustom:
        TargetTrackingConfiguration:
          CustomizedMetricSpecification:
            Dimensions:
              - AutoScaling:
                  Name: AutoScalingGroupName
                  Value: Ref('AutoScalingGroup')
  ScheduledAction:
    - Down:
        DesiredSize: CapacityDesired
        MaxSize: CapacityMax
        MinSize: CapacityMin
        Recurrence: '00 19 * * *'
    - Up:
        DesiredSize: CapacityDesired
        MaxSize: CapacityMax
        MinSize: CapacityMin
        Recurrence: '30 08 * * mon-fri'
  SpotPrice: 0
  Volume:
    Size: 8
    Type: gp2

dev: &cfg_dev
  Alarm:
    - BackendExternal5XX:
        EvaluationPeriods: 0
    - BackendInternal5XX:
        EvaluationPeriods: 0
    - TargetEC2External5XX:
        EvaluationPeriods: 0
    - TargetEC2Internal5XX:
        EvaluationPeriods: 0

stg: *cfg_dev 


IBoxLoaderAfter: !include [
  spot-auto.yml,
  #  spot-asg.yml,
  cloudwatch-agent.yml,
]

Base: &base
  IBOX_PARAMETER:
    - _EvaluationPeriods:
        Description: 'Number of periods for alarm evaluation - 0 to disable - empty for mapped value'
        AllowedValues: ['', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
#    - _Period:
#        Description: 'Period lenght in seconds (multiple of 60) - empty for mapped value'
    - _Threshold:
        Description: 'Threshold for alarm triggering - empty for mapped value'
        AllowedValues: ['', '10', '15', '20', '25', '30', '35', '40', '45', '50',
                        '55', '60', '65', '70', '75', '80', '85', '90', '95', '100']
  IBOX_CONDITION:
    - _:
        get_condition('', 'not_equals', '0', f'{IBOX_RESNAME}EvaluationPeriods')
  IBOX_OUTPUT:
    - _:
        Value: Period= ${Period} ,EvaluationPeriods= ${EvaluationPeriods} ,Threshold= ${Threshold}
  IBOX_ENABLED: False
  Condition: IBOX_RESNAME
  ActionsEnabled: true
  Period: 60
  Dimensions: {}

AlarmTarget5XX: &target5xx
  AlarmActions: [get_expvalue('SNSTopicCloudWatchAlarm')]
  EvaluationPeriods: 2
  MetricName: HTTPCode_Target_5XX_Count
  Statistic: Sum
  ComparisonOperator: 'GreaterThanThreshold'
  Threshold: '50'
  TreatMissingData: 'notBreaching'
  Namespace: 'AWS/ApplicationELB'

AlarmLoadBalancerApplication5XX: &alb5xx
  AlarmActions: [get_expvalue('SNSTopicCloudWatchAlarm')]
  EvaluationPeriods: 2
  MetricName: HTTPCode_ELB_5XX_Count
  Statistic: Sum
  ComparisonOperator: 'GreaterThanThreshold'
  Threshold: '50'
  TreatMissingData: 'notBreaching'
  Namespace: 'AWS/ApplicationELB'

AlarmBackend5XX: &backend5xx
  AlarmActions: [get_expvalue('SNSTopicCloudWatchAlarm')]
  EvaluationPeriods: 2
  MetricName: HTTPCode_Backend_5XX
  Statistic: Sum
  ComparisonOperator: GreaterThanThreshold
  Threshold: '50'
  TreatMissingData: 'notBreaching'
  Namespace: 'AWS/ELB'

AlarmASGSpot: &asgspot
  Condition: SpotASG
  AlarmActions: [Ref('SNSTopicASGSpot')]
  Period: Ref('AWS::NoValue')
  Metrics: &asgspotmetrics
    - Expression:
    - MinOnDemand:
        ReturnData: false
        Id: m1
        MetricStat:
          Metric:
            Namespace: AWS/AutoScaling
            Dimensions:
              - ASGOnDemand:
                  Name: AutoScalingGroupName
                  Value: Ref('AutoScalingGroup')
            MetricName: GroupMinSize
          Stat: Average
          Period: 60
    - InServiceDemand:
        ReturnData: false
        Id: m2
        MetricStat:
          Metric:
            Namespace: AWS/AutoScaling
            Dimensions:
              - ASGOnDemand:
                  Name: AutoScalingGroupName
                  Value: Ref('AutoScalingGroup')
            MetricName: GroupInServiceInstances
          Stat: Average
          Period: 60
    - DesiredSpot:
        ReturnData: false
        Id: m3
        MetricStat:
          Metric:
            Namespace: AWS/AutoScaling
            Dimensions:
              - ASGOnDemand:
                  Name: AutoScalingGroupName
                  Value: Ref('AutoScalingGroupSpot')
            MetricName: GroupDesiredCapacity
          Stat: Average
          Period: 60
    - InServiceSpot:
        ReturnData: false
        Id: m4
        MetricStat:
          Metric:
            Namespace: AWS/AutoScaling
            Dimensions:
              - ASGOnDemand:
                  Name: AutoScalingGroupName
                  Value: Ref('AutoScalingGroupSpot')
            MetricName: GroupInServiceInstances
          Stat: Average
          Period: 60

AlarmDiskUsed: &diskused
  EvaluationPeriods: 3
  MetricName: 'root_disk_used_percent'
  Statistic: 'Maximum'
  Namespace: 'CWAgent'
  Unit: Percent
  Dimensions:
    - RootDisk:
        Name: AutoScalingGroupName
        Value: Ref('AutoScalingGroup')


global:
  AlarmCPUBase: &cpu
    EvaluationPeriods: 5
    MetricName: 'CPUUtilization'
    Statistic: 'Average'
    Namespace: ''
    Unit: Percent
  Alarm:
    - IBOX_BASE: *base
    - CPUHigh:
        <<: *cpu
        AlarmActions: [Ref('AutoScalingScalingPolicyUp')]
        AlarmDescription: 'Alarm if CPU too High'
        ComparisonOperator: 'GreaterThanThreshold'
        Threshold: '60'
    - CPULow:
        <<: *cpu
        AlarmActions: [Ref('AutoScalingScalingPolicyDown')]
        AlarmDescription: 'Alarm if CPU too Low'
        ComparisonOperator: 'LessThanOrEqualToThreshold'
        Threshold: '30'
    - TargetExternal5XX:
        <<: *target5xx
        Dimensions:
          - LoadBalancer:
              Name: LoadBalancer
              Value: get_expvalue('LoadBalancerApplicationExternalFullName', 'LoadBalancerApplicationStack')
          - TargetGroup:
              Name: TargetGroup
              Value: Sub('${TargetGroupExternal.TargetGroupFullName}')
    - TargetInternal5XX:
        <<: *target5xx
        Dimensions:
          - LoadBalancer:
              Name: LoadBalancer
              Value: get_expvalue('LoadBalancerApplicationInternalFullName', 'LoadBalancerApplicationStack')
          - TargetGroup:
              Name: TargetGroup
              Value: Sub('${TargetGroupInternal.TargetGroupFullName}')
    - TargetEC2External5XX:
        <<: *target5xx
        Dimensions:
          - LoadBalancer:
              Name: LoadBalancer
              Value: Sub('${LoadBalancerApplicationExternal.LoadBalancerFullName}')
    - TargetEC2Internal5XX:
        <<: *target5xx
        Dimensions:
          - LoadBalancer:
              Name: LoadBalancer
              Value: Sub('${LoadBalancerApplicationInternal.LoadBalancerFullName}')
    - BackendExternal5XX:
        <<: *backend5xx
        Dimensions:
          - LoadBalancer:
              Name: LoadBalancerName
              Value: Ref('LoadBalancerClassicExternal')
    - BackendInternal5XX:
        <<: *backend5xx
        Dimensions:
          - LoadBalancer:
              Name: LoadBalancerName
              Value: Ref('LoadBalancerClassicInternal')
    - LoadBalancerApplicationExternal5XX:
        <<: *alb5xx
        Dimensions:
          - LoadBalancer:
              Name: LoadBalancer
              Value: Sub('${LoadBalancerApplicationExternal.LoadBalancerFullName}')
    - LoadBalancerApplicationInternal5XX:
        <<: *alb5xx
        Dimensions:
          - LoadBalancer:
              Name: LoadBalancer
              Value: Sub('${LoadBalancerApplicationInternal.LoadBalancerFullName}')
    - ASGSpotNotAvailable:
        <<: *asgspot
        ComparisonOperator: GreaterThanOrEqualToThreshold
        EvaluationPeriods: 3
        Metrics:
          <<: *asgspotmetrics
          Expression:
            ReturnData: true
            Expression: m1 - m2 + m3 - m4
            Id: e1
            Label: SpotNotAvailable
        Threshold: 1
    - ASGOnDemandInExcess:
        <<: *asgspot
        ComparisonOperator: LessThanOrEqualToThreshold
        EvaluationPeriods: 7
        Metrics:
          <<: *asgspotmetrics
          Expression:
            ReturnData: true
            Expression: m1 - m2 + m3 - m4
            Id: e1
            Label: OnDemandInExcess
        Threshold: -1
    - DiskUsed:
        <<: *diskused
        ComparisonOperator: GreaterThanOrEqualToThreshold
        Threshold: '80'

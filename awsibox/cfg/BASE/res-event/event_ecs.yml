IBoxLoader:
  - !include
    - lambda/layers.yml
    #- res-event/event_ecs-spot.yml

global:
  EventsRule:
    - ECSEventTaskStateChange:
        IBOX_SOURCE_OBJ: EventsRuleTargetLambda
        Description: 'ECSEvents Lambda Trigger for Task STOPPED'
        State: 'DISABLED'
        EventPattern:
          detail:
            lastStatus:
              - STOPPED
            desiredStatus:
              - STOPPED
            stopCode:
              - EssentialContainerExited
          detail-type:
            - ECS Task State Change
          source:
            - aws.ecs
        Targets:
          - Lambda0:
              Arn: GetAtt('LambdaECSEventTaskStateChange', 'Arn')
              Id: TargetFunction-01
  Lambda:
    - ECSEventTaskStateChange:
        Description: 'ECSEventTaskStateChange'
        Code:
          ZipFile: str(IBOX_INDEXNAME)
        Layers:
          - LambdaLayerVersionPython37SSM
          - LambdaLayerVersionPython39SlackClient
        MemorySize: 128
        Runtime: python3.9
        Timeout: 30
        Environment:
          Variables:
            - SNSTopic: get_expvalue('SNSTopicCloudWatchAlarm')
  IAMPolicy:
    - LambdaECSEventTaskStateChange:
        Roles:
          - Ref('RoleLambdaECSEventTaskStateChange')
        PolicyDocument:
          Statement:
            - 1:
                Action: 'sns:Publish'
                Effect: Allow
                Resource: get_expvalue('SNSTopicCloudWatchAlarm')
    - ParameterStore:
        Roles++:
          - Ref('RoleLambdaECSEventTaskStateChange')

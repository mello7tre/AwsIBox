IBoxLoader: !include [
  loadbalancing/loadbalancing-elb.yml,
]

ecs-alb:
  StackName: alb
  Parameter:
    - LoadBalancerApplication:
        Description: 'Application Load Balancer to conditionally create - empty for default based on role - need to be already defined'
        AllowedValues: ['External', 'Internal', '']
    - RegionalCertificateArn:
        Description: 'LoadBalancer CertificateArn - empty for default based on env/role'
  Condition:
    - LoadBalancerApplicationExternal:
        Or(
          Equals(Ref('LoadBalancerApplication'), 'External'),
          Equals(Ref('LoadBalancerApplication'), '')
        )
    - LoadBalancerApplicationInternal:
        Or(
          Equals(Ref('LoadBalancerApplication'), 'Internal'),
          Equals(Ref('LoadBalancerApplication'), ''),
        )
  Output:
    - LoadBalancerApplication:
        Value: get_endvalue('LoadBalancerApplication', nolist=True)
  SecurityGroup**:
    - LoadBalancerApplicationExternal:
        IBOX_OUTPUT:
          - _:
              Condition: LoadBalancerApplicationExternal
              Value:  GetAtt(f'{IBOX_RESNAME}', 'GroupId')
              Export: Export(Sub('%s-${AWS::StackName}' % IBOX_RESNAME))
        Condition: LoadBalancerApplicationExternal
        GroupDescription: Sub('Access to LoadBalancerApplicationExternal ${AWS::StackName}')
        SecurityGroupIngress:
          - Http:
              CidrIp: '0.0.0.0/0'
              FromPort: 80
              ToPort: 80
          - Https:
              CidrIp: '0.0.0.0/0'
              FromPort: 443
              ToPort: 443
    - LoadBalancerApplicationInternal:
        IBOX_OUTPUT:
          - _:
              Condition: LoadBalancerApplicationInternal
              Value:  GetAtt(f'{IBOX_RESNAME}', 'GroupId')
              Export: Export(Sub('%s-${AWS::StackName}' % IBOX_RESNAME))
        Condition: LoadBalancerApplicationInternal
        GroupDescription: Sub('Access to LoadBalancerApplicationInternal ${AWS::StackName}')
        SecurityGroupIngress:
          - Http:
              CidrIp: '0.0.0.0/0'
              FromPort: 80
              ToPort: 80
  LoadBalancerApplication: ['External', 'Internal']
  RecordSet: []
